syntax = "proto3";


// import 'nanopb.proto';

message GrpcRequest {
  int32 call_id = 1;
  // This would be ideal to have oneof here,
  // but since callback inside oneof is not supported
  // I am leaving strign path as optional
  // oneof Path_oneof{
  //   int32 path_crc = 1;
  //   string path = 2 [(nanopb).max_size = 8];
  // }
  fixed32 path_hash = 2;
  string path = 3;
  bytes data = 10;
}

enum GrpcStatus {
  OK = 0;
  CANCELLED = 1;
  UNKNOWN = 2;
  INVALID_ARGUMENT = 3;
  DEADLINE_EXCEEDED = 4;
  NOT_FOUND = 5;
  ALREADY_EXISTS = 6;
  PERMISSION_DENIED = 7;
  UNAUTHENTICATED = 16;
  RESOURCE_EXHAUSTED = 8;
  FAILED_PRECONDITION = 9;
  ABORTED = 10;
  OUT_OF_RANGE = 11;
  UNIMPLEMENTED = 12;
  INTERNAL = 13;
  UNAVAILABLE = 14;
  DATA_LOSS = 15;
}

enum GrpcRequestType {
  REGULER = 0;
  END_ALL_CALLS = 1;
  PING = 2;
  GET_ALL_SERVICES = 3;
}

enum GrpcResponseType {
  REGULAR = 0;
  STREAM = 1;
  END_OF_STREAM = 2;
  END_OF_CALL = 3;
  PONG = 4;
}

message GrpcResponse {
  int32 call_id = 1;
  GrpcStatus grpc_status = 2;
  GrpcResponseType response_type = 3;
  int32 error_code = 4;
  bytes data = 10;
}

// Following messages are for client side implementation
// they differ from only in options

message GrpcRequest_CS {
    int32 call_id = 1;
    // This would be ideal to have oneof here,
    // but since callback inside oneof is not supported
    // I am leaving strign path as optional
    // oneof Path_oneof{
    //   int32 path_crc = 1;
    //   string path = 2 [(nanopb).max_size = 8];
    // }
    fixed32 path_hash = 2;
    string path = 3;
    bytes data = 10;
}

message GrpcResponse_CS {
  int32 call_id = 1;
  GrpcStatus grpc_status = 2;
  GrpcResponseType response_type = 3;
  int32 error_code = 4;
  bytes data = 10;
}
